<?php

namespace ProduitBundle\Repository;

use Doctrine\DBAL\DBALException;

/**
 * produitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class produitRepository extends \Doctrine\ORM\EntityRepository
{
    public function return_produit_id($produit)
    {
        $id=$produit->getLibelle();
        $cat=$produit->getImage();
        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "SELECT ID_P FROM `produit` WHERE Libelle='$id' and image="."'". $cat."'";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();
        return $stmt->fetch();


    }
    public function return_produit_categorie_premium()
    {

        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "SELECT * FROM `produit` p inner join `abonnement` a where ( p.ID_P=a.ID_P and p.Lib_C='Premium' ) ";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();
        return $stmt->fetch();


    }

    public function produit_velo()
    {
        $conn = $this->getEntityManager()->getConnection();
        $sql = "SELECT * FROM `produit` p inner join `velo` v where p.ID_P=v.idA ";
        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();
        return $stmt->fetchAll();
    }


    public function produit_abonment()
    {

        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "SELECT * FROM `produit` p inner join `abonnement` a where p.ID_P=a.ID_P ";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();





return $stmt->fetchAll();


    }
    public function produit_piece()
    {

        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "SELECT * FROM `produit` p inner join `piece` pi where p.ID_P=pi.ID_P ";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();





        return $stmt->fetchAll();


    }

    public function produit_abonment_prix($min,$max)
    {

        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "SELECT * FROM `produit` p inner join `abonnement` a where p.ID_P=a.ID_P AND p.Prix BETWEEN '$min' AND '$max' ";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();





        return $stmt->fetchAll();


    }

    public function produit_piece_prix($min,$max)
    {

        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "SELECT * FROM `produit` p inner join `piece` a where p.ID_P=a.ID_P AND p.Prix BETWEEN '$min' AND '$max' ";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();





        return $stmt->fetchAll();


    }
    public function produit_accessoire_prix($min,$max)
    {

        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "SELECT * FROM `produit` p inner join `accessoire` a where p.ID_P=a.ID_P AND p.Prix BETWEEN '$min' AND '$max' ";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();





        return $stmt->fetchAll();


    }

    public function produit_velo_prix($min,$max)
    {

        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "SELECT * FROM `produit` p inner join `velo` a where p.ID_P=a.idA AND p.Prix BETWEEN '$min' AND '$max' ";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();





        return $stmt->fetchAll();


    }

    public function produit_abonment_selon_site($lib_S)
    {

        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "SELECT * FROM `produit` p inner join `abonnement` a where p.ID_P=a.ID_P AND p.Lib_S = \"$lib_S\"";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();





        return $stmt->fetchAll();


    }

    public function produit_accessoire()
    {

        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "SELECT * FROM `produit` p inner join `accessoire` a where p.ID_P=a.ID_P ";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();





        return $stmt->fetchAll();


    }
    public function produit_velo_selon_site($lib_S)
    {

        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "SELECT * FROM `produit` p inner join `velo` a where p.ID_P=a.idA AND p.Lib_S = \"$lib_S\"";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();





        return $stmt->fetchAll();


    }
    public function produit_accessoire_selon_site($lib_S)
    {

        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "SELECT * FROM `produit` p inner join `accessoire` a where p.ID_P=a.ID_P AND p.Lib_S = \"$lib_S\"";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();





        return $stmt->fetchAll();


    }


}
