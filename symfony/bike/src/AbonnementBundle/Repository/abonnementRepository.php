<?php

namespace AbonnementBundle\Repository;

use Doctrine\DBAL\DBALException;

/**
 * abonnementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class abonnementRepository extends \Doctrine\ORM\EntityRepository
{

    public function statistique_abo()
    {

        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "SELECT count(*) as nombre,p.Lib_C FROM `abonnement` a INNER JOIN produit p WHERE p.ID_P=a.ID_p GROUP by p.Lib_C";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();
        return $stmt->fetchAll();

    }
    public function mise_a_jour_quantite()
    {

        $conn = $this->getEntityManager()
            ->getConnection();

        $sql = "SELECT * FROM `abonnement` a INNER JOIN produit p  WHERE p.ID_P=a.ID_P and a.quantite=0";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();
        $tab= $stmt->fetchAll();
        for($i=0;$i<sizeof($tab);$i++ )
        {


            $this->delete_abo_produit((int)$tab[$i]['ID_P']);

           $this->delete_abo((int)$tab[$i]['ID_P']);



        }

    }
/*--------------------------*/

    // hne kol chay tebaa chatroom
    /*---------------------*/
    public function get_NBR_Messages($id){
        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "SELECT count(*) as nbr FROM `thread_metadata` where participant_id= $id";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();





        return $stmt->fetch();


    }


    private function delete_abo($id_p)
    {
        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "DELETE FROM `abonnement` WHERE ID_P=$id_p";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();






    }

    private function delete_abo_produit($id_p)
    {
        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "DELETE FROM `produit` WHERE ID_P=$id_p";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();






    }





    public function get_rooms($id){
        $conn = $this->getEntityManager()
            ->getConnection();
        $sql = "   SELECT *  FROM `thread`  where created_by_id = $id ";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        $stmt->execute();





        return $stmt->fetchAll();


    }
}
